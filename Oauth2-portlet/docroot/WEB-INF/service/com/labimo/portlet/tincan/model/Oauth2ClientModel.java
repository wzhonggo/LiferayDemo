/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.labimo.portlet.tincan.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Oauth2Client service. Represents a row in the &quot;labimo_Oauth2Client&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.labimo.portlet.tincan.model.impl.Oauth2ClientModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.labimo.portlet.tincan.model.impl.Oauth2ClientImpl}.
 * </p>
 *
 * @author wzgong
 * @see Oauth2Client
 * @see com.labimo.portlet.tincan.model.impl.Oauth2ClientImpl
 * @see com.labimo.portlet.tincan.model.impl.Oauth2ClientModelImpl
 * @generated
 */
public interface Oauth2ClientModel extends BaseModel<Oauth2Client> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a oauth2 client model instance should use the {@link Oauth2Client} interface instead.
	 */

	/**
	 * Returns the primary key of this oauth2 client.
	 *
	 * @return the primary key of this oauth2 client
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this oauth2 client.
	 *
	 * @param primaryKey the primary key of this oauth2 client
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the ID of this oauth2 client.
	 *
	 * @return the ID of this oauth2 client
	 */
	@AutoEscape
	public String getId();

	/**
	 * Sets the ID of this oauth2 client.
	 *
	 * @param id the ID of this oauth2 client
	 */
	public void setId(String id);

	/**
	 * Returns the name of this oauth2 client.
	 *
	 * @return the name of this oauth2 client
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this oauth2 client.
	 *
	 * @param name the name of this oauth2 client
	 */
	public void setName(String name);

	/**
	 * Returns the description of this oauth2 client.
	 *
	 * @return the description of this oauth2 client
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this oauth2 client.
	 *
	 * @param description the description of this oauth2 client
	 */
	public void setDescription(String description);

	/**
	 * Returns the secret of this oauth2 client.
	 *
	 * @return the secret of this oauth2 client
	 */
	@AutoEscape
	public String getSecret();

	/**
	 * Sets the secret of this oauth2 client.
	 *
	 * @param secret the secret of this oauth2 client
	 */
	public void setSecret(String secret);

	/**
	 * Returns the url of this oauth2 client.
	 *
	 * @return the url of this oauth2 client
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this oauth2 client.
	 *
	 * @param url the url of this oauth2 client
	 */
	public void setUrl(String url);

	/**
	 * Returns the redirect url of this oauth2 client.
	 *
	 * @return the redirect url of this oauth2 client
	 */
	@AutoEscape
	public String getRedirectUrl();

	/**
	 * Sets the redirect url of this oauth2 client.
	 *
	 * @param redirectUrl the redirect url of this oauth2 client
	 */
	public void setRedirectUrl(String redirectUrl);

	/**
	 * Returns the scope of this oauth2 client.
	 *
	 * @return the scope of this oauth2 client
	 */
	@AutoEscape
	public String getScope();

	/**
	 * Sets the scope of this oauth2 client.
	 *
	 * @param scope the scope of this oauth2 client
	 */
	public void setScope(String scope);

	/**
	 * Returns the icon url of this oauth2 client.
	 *
	 * @return the icon url of this oauth2 client
	 */
	@AutoEscape
	public String getIconUrl();

	/**
	 * Sets the icon url of this oauth2 client.
	 *
	 * @param iconUrl the icon url of this oauth2 client
	 */
	public void setIconUrl(String iconUrl);

	/**
	 * Returns the liferay user ID of this oauth2 client.
	 *
	 * @return the liferay user ID of this oauth2 client
	 */
	public long getLiferayUserId();

	/**
	 * Sets the liferay user ID of this oauth2 client.
	 *
	 * @param liferayUserId the liferay user ID of this oauth2 client
	 */
	public void setLiferayUserId(long liferayUserId);

	/**
	 * Returns the liferay user uuid of this oauth2 client.
	 *
	 * @return the liferay user uuid of this oauth2 client
	 * @throws SystemException if a system exception occurred
	 */
	public String getLiferayUserUuid() throws SystemException;

	/**
	 * Sets the liferay user uuid of this oauth2 client.
	 *
	 * @param liferayUserUuid the liferay user uuid of this oauth2 client
	 */
	public void setLiferayUserUuid(String liferayUserUuid);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Oauth2Client oauth2Client);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Oauth2Client> toCacheModel();

	@Override
	public Oauth2Client toEscapedModel();

	@Override
	public Oauth2Client toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}