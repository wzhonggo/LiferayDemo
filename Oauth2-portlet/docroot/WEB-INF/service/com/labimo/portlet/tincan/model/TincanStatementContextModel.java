/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.labimo.portlet.tincan.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the TincanStatementContext service. Represents a row in the &quot;labimo_TincanStatementContext&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.labimo.portlet.tincan.model.impl.TincanStatementContextModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.labimo.portlet.tincan.model.impl.TincanStatementContextImpl}.
 * </p>
 *
 * @author wzgong
 * @see TincanStatementContext
 * @see com.labimo.portlet.tincan.model.impl.TincanStatementContextImpl
 * @see com.labimo.portlet.tincan.model.impl.TincanStatementContextModelImpl
 * @generated
 */
public interface TincanStatementContextModel extends BaseModel<TincanStatementContext> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a tincan statement context model instance should use the {@link TincanStatementContext} interface instead.
	 */

	/**
	 * Returns the primary key of this tincan statement context.
	 *
	 * @return the primary key of this tincan statement context
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this tincan statement context.
	 *
	 * @param primaryKey the primary key of this tincan statement context
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this tincan statement context.
	 *
	 * @return the ID of this tincan statement context
	 */
	public long getId();

	/**
	 * Sets the ID of this tincan statement context.
	 *
	 * @param id the ID of this tincan statement context
	 */
	public void setId(long id);

	/**
	 * Returns the registration of this tincan statement context.
	 *
	 * @return the registration of this tincan statement context
	 */
	@AutoEscape
	public String getRegistration();

	/**
	 * Sets the registration of this tincan statement context.
	 *
	 * @param registration the registration of this tincan statement context
	 */
	public void setRegistration(String registration);

	/**
	 * Returns the instructor ID of this tincan statement context.
	 *
	 * @return the instructor ID of this tincan statement context
	 */
	public long getInstructorId();

	/**
	 * Sets the instructor ID of this tincan statement context.
	 *
	 * @param instructorId the instructor ID of this tincan statement context
	 */
	public void setInstructorId(long instructorId);

	/**
	 * Returns the team ID of this tincan statement context.
	 *
	 * @return the team ID of this tincan statement context
	 */
	public long getTeamId();

	/**
	 * Sets the team ID of this tincan statement context.
	 *
	 * @param teamId the team ID of this tincan statement context
	 */
	public void setTeamId(long teamId);

	/**
	 * Returns the context activities ID of this tincan statement context.
	 *
	 * @return the context activities ID of this tincan statement context
	 */
	public long getContextActivitiesId();

	/**
	 * Sets the context activities ID of this tincan statement context.
	 *
	 * @param contextActivitiesId the context activities ID of this tincan statement context
	 */
	public void setContextActivitiesId(long contextActivitiesId);

	/**
	 * Returns the revision of this tincan statement context.
	 *
	 * @return the revision of this tincan statement context
	 */
	@AutoEscape
	public String getRevision();

	/**
	 * Sets the revision of this tincan statement context.
	 *
	 * @param revision the revision of this tincan statement context
	 */
	public void setRevision(String revision);

	/**
	 * Returns the platform of this tincan statement context.
	 *
	 * @return the platform of this tincan statement context
	 */
	@AutoEscape
	public String getPlatform();

	/**
	 * Sets the platform of this tincan statement context.
	 *
	 * @param platform the platform of this tincan statement context
	 */
	public void setPlatform(String platform);

	/**
	 * Returns the language of this tincan statement context.
	 *
	 * @return the language of this tincan statement context
	 */
	@AutoEscape
	public String getLanguage();

	/**
	 * Sets the language of this tincan statement context.
	 *
	 * @param language the language of this tincan statement context
	 */
	public void setLanguage(String language);

	/**
	 * Returns the statement of this tincan statement context.
	 *
	 * @return the statement of this tincan statement context
	 */
	@AutoEscape
	public String getStatement();

	/**
	 * Sets the statement of this tincan statement context.
	 *
	 * @param statement the statement of this tincan statement context
	 */
	public void setStatement(String statement);

	/**
	 * Returns the extensions of this tincan statement context.
	 *
	 * @return the extensions of this tincan statement context
	 */
	@AutoEscape
	public String getExtensions();

	/**
	 * Sets the extensions of this tincan statement context.
	 *
	 * @param extensions the extensions of this tincan statement context
	 */
	public void setExtensions(String extensions);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(TincanStatementContext tincanStatementContext);

	@Override
	public int hashCode();

	@Override
	public CacheModel<TincanStatementContext> toCacheModel();

	@Override
	public TincanStatementContext toEscapedModel();

	@Override
	public TincanStatementContext toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}