/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.labimo.portlet.tincan.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the TincanStatement service. Represents a row in the &quot;labimo_TincanStatement&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.labimo.portlet.tincan.model.impl.TincanStatementModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.labimo.portlet.tincan.model.impl.TincanStatementImpl}.
 * </p>
 *
 * @author wzgong
 * @see TincanStatement
 * @see com.labimo.portlet.tincan.model.impl.TincanStatementImpl
 * @see com.labimo.portlet.tincan.model.impl.TincanStatementModelImpl
 * @generated
 */
public interface TincanStatementModel extends BaseModel<TincanStatement> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a tincan statement model instance should use the {@link TincanStatement} interface instead.
	 */

	/**
	 * Returns the primary key of this tincan statement.
	 *
	 * @return the primary key of this tincan statement
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this tincan statement.
	 *
	 * @param primaryKey the primary key of this tincan statement
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this tincan statement.
	 *
	 * @return the ID of this tincan statement
	 */
	public long getId();

	/**
	 * Sets the ID of this tincan statement.
	 *
	 * @param id the ID of this tincan statement
	 */
	public void setId(long id);

	/**
	 * Returns the statement ID of this tincan statement.
	 *
	 * @return the statement ID of this tincan statement
	 */
	@AutoEscape
	public String getStatementId();

	/**
	 * Sets the statement ID of this tincan statement.
	 *
	 * @param statementId the statement ID of this tincan statement
	 */
	public void setStatementId(String statementId);

	/**
	 * Returns the sub statement ID of this tincan statement.
	 *
	 * @return the sub statement ID of this tincan statement
	 */
	public long getSubStatementId();

	/**
	 * Sets the sub statement ID of this tincan statement.
	 *
	 * @param subStatementId the sub statement ID of this tincan statement
	 */
	public void setSubStatementId(long subStatementId);

	/**
	 * Returns the agent ID of this tincan statement.
	 *
	 * @return the agent ID of this tincan statement
	 */
	public long getAgentId();

	/**
	 * Sets the agent ID of this tincan statement.
	 *
	 * @param agentId the agent ID of this tincan statement
	 */
	public void setAgentId(long agentId);

	/**
	 * Returns the context ID of this tincan statement.
	 *
	 * @return the context ID of this tincan statement
	 */
	public long getContextId();

	/**
	 * Sets the context ID of this tincan statement.
	 *
	 * @param contextId the context ID of this tincan statement
	 */
	public void setContextId(long contextId);

	/**
	 * Returns the activity ID of this tincan statement.
	 *
	 * @return the activity ID of this tincan statement
	 */
	public long getActivityId();

	/**
	 * Sets the activity ID of this tincan statement.
	 *
	 * @param activityId the activity ID of this tincan statement
	 */
	public void setActivityId(long activityId);

	/**
	 * Returns the result ID of this tincan statement.
	 *
	 * @return the result ID of this tincan statement
	 */
	public long getResultId();

	/**
	 * Sets the result ID of this tincan statement.
	 *
	 * @param resultId the result ID of this tincan statement
	 */
	public void setResultId(long resultId);

	/**
	 * Returns the authority ID of this tincan statement.
	 *
	 * @return the authority ID of this tincan statement
	 */
	public long getAuthorityId();

	/**
	 * Sets the authority ID of this tincan statement.
	 *
	 * @param authorityId the authority ID of this tincan statement
	 */
	public void setAuthorityId(long authorityId);

	/**
	 * Returns the timestamp of this tincan statement.
	 *
	 * @return the timestamp of this tincan statement
	 */
	public Date getTimestamp();

	/**
	 * Sets the timestamp of this tincan statement.
	 *
	 * @param timestamp the timestamp of this tincan statement
	 */
	public void setTimestamp(Date timestamp);

	/**
	 * Returns the stored of this tincan statement.
	 *
	 * @return the stored of this tincan statement
	 */
	public Date getStored();

	/**
	 * Sets the stored of this tincan statement.
	 *
	 * @param stored the stored of this tincan statement
	 */
	public void setStored(Date stored);

	/**
	 * Returns the version of this tincan statement.
	 *
	 * @return the version of this tincan statement
	 */
	@AutoEscape
	public String getVersion();

	/**
	 * Sets the version of this tincan statement.
	 *
	 * @param version the version of this tincan statement
	 */
	public void setVersion(String version);

	/**
	 * Returns the verb ID of this tincan statement.
	 *
	 * @return the verb ID of this tincan statement
	 */
	public long getVerbId();

	/**
	 * Sets the verb ID of this tincan statement.
	 *
	 * @param verbId the verb ID of this tincan statement
	 */
	public void setVerbId(long verbId);

	/**
	 * Returns the voided of this tincan statement.
	 *
	 * @return the voided of this tincan statement
	 */
	public boolean getVoided();

	/**
	 * Returns <code>true</code> if this tincan statement is voided.
	 *
	 * @return <code>true</code> if this tincan statement is voided; <code>false</code> otherwise
	 */
	public boolean isVoided();

	/**
	 * Sets whether this tincan statement is voided.
	 *
	 * @param voided the voided of this tincan statement
	 */
	public void setVoided(boolean voided);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(TincanStatement tincanStatement);

	@Override
	public int hashCode();

	@Override
	public CacheModel<TincanStatement> toCacheModel();

	@Override
	public TincanStatement toEscapedModel();

	@Override
	public TincanStatement toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}