/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.labimo.portlet.tincan.service.base;

import com.labimo.portlet.tincan.model.LiferayTincanManifestAct;
import com.labimo.portlet.tincan.service.LiferayTincanManifestActLocalService;
import com.labimo.portlet.tincan.service.persistence.LiferayTincanManifestActPersistence;
import com.labimo.portlet.tincan.service.persistence.LiferayUserPersistence;
import com.labimo.portlet.tincan.service.persistence.Oauth2ClientPersistence;
import com.labimo.portlet.tincan.service.persistence.Oauth2EndpointPersistence;
import com.labimo.portlet.tincan.service.persistence.Oauth2TokenPersistence;
import com.labimo.portlet.tincan.service.persistence.TincanActivityStatePersistence;
import com.labimo.portlet.tincan.service.persistence.TincanAgentPersistence;
import com.labimo.portlet.tincan.service.persistence.TincanAgentProfilePersistence;
import com.labimo.portlet.tincan.service.persistence.TincanAttachmentPersistence;
import com.labimo.portlet.tincan.service.persistence.TincanStatementAttachmentPersistence;
import com.labimo.portlet.tincan.service.persistence.TincanStatementContextPersistence;
import com.labimo.portlet.tincan.service.persistence.TincanStatementPersistence;
import com.labimo.portlet.tincan.service.persistence.TincanStatementResultPersistence;
import com.labimo.portlet.tincan.service.persistence.TincanSubStatementPersistence;
import com.labimo.portlet.tincan.service.persistence.TincanVerbPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the liferay tincan manifest act local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.labimo.portlet.tincan.service.impl.LiferayTincanManifestActLocalServiceImpl}.
 * </p>
 *
 * @author wzgong
 * @see com.labimo.portlet.tincan.service.impl.LiferayTincanManifestActLocalServiceImpl
 * @see com.labimo.portlet.tincan.service.LiferayTincanManifestActLocalServiceUtil
 * @generated
 */
public abstract class LiferayTincanManifestActLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements LiferayTincanManifestActLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.labimo.portlet.tincan.service.LiferayTincanManifestActLocalServiceUtil} to access the liferay tincan manifest act local service.
	 */

	/**
	 * Adds the liferay tincan manifest act to the database. Also notifies the appropriate model listeners.
	 *
	 * @param liferayTincanManifestAct the liferay tincan manifest act
	 * @return the liferay tincan manifest act that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public LiferayTincanManifestAct addLiferayTincanManifestAct(
		LiferayTincanManifestAct liferayTincanManifestAct)
		throws SystemException {
		liferayTincanManifestAct.setNew(true);

		return liferayTincanManifestActPersistence.update(liferayTincanManifestAct);
	}

	/**
	 * Creates a new liferay tincan manifest act with the primary key. Does not add the liferay tincan manifest act to the database.
	 *
	 * @param id the primary key for the new liferay tincan manifest act
	 * @return the new liferay tincan manifest act
	 */
	@Override
	public LiferayTincanManifestAct createLiferayTincanManifestAct(long id) {
		return liferayTincanManifestActPersistence.create(id);
	}

	/**
	 * Deletes the liferay tincan manifest act with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param id the primary key of the liferay tincan manifest act
	 * @return the liferay tincan manifest act that was removed
	 * @throws PortalException if a liferay tincan manifest act with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public LiferayTincanManifestAct deleteLiferayTincanManifestAct(long id)
		throws PortalException, SystemException {
		return liferayTincanManifestActPersistence.remove(id);
	}

	/**
	 * Deletes the liferay tincan manifest act from the database. Also notifies the appropriate model listeners.
	 *
	 * @param liferayTincanManifestAct the liferay tincan manifest act
	 * @return the liferay tincan manifest act that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public LiferayTincanManifestAct deleteLiferayTincanManifestAct(
		LiferayTincanManifestAct liferayTincanManifestAct)
		throws SystemException {
		return liferayTincanManifestActPersistence.remove(liferayTincanManifestAct);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(LiferayTincanManifestAct.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return liferayTincanManifestActPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.labimo.portlet.tincan.model.impl.LiferayTincanManifestActModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return liferayTincanManifestActPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.labimo.portlet.tincan.model.impl.LiferayTincanManifestActModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return liferayTincanManifestActPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return liferayTincanManifestActPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return liferayTincanManifestActPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public LiferayTincanManifestAct fetchLiferayTincanManifestAct(long id)
		throws SystemException {
		return liferayTincanManifestActPersistence.fetchByPrimaryKey(id);
	}

	/**
	 * Returns the liferay tincan manifest act with the primary key.
	 *
	 * @param id the primary key of the liferay tincan manifest act
	 * @return the liferay tincan manifest act
	 * @throws PortalException if a liferay tincan manifest act with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public LiferayTincanManifestAct getLiferayTincanManifestAct(long id)
		throws PortalException, SystemException {
		return liferayTincanManifestActPersistence.findByPrimaryKey(id);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return liferayTincanManifestActPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the liferay tincan manifest acts.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.labimo.portlet.tincan.model.impl.LiferayTincanManifestActModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of liferay tincan manifest acts
	 * @param end the upper bound of the range of liferay tincan manifest acts (not inclusive)
	 * @return the range of liferay tincan manifest acts
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<LiferayTincanManifestAct> getLiferayTincanManifestActs(
		int start, int end) throws SystemException {
		return liferayTincanManifestActPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of liferay tincan manifest acts.
	 *
	 * @return the number of liferay tincan manifest acts
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getLiferayTincanManifestActsCount() throws SystemException {
		return liferayTincanManifestActPersistence.countAll();
	}

	/**
	 * Updates the liferay tincan manifest act in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param liferayTincanManifestAct the liferay tincan manifest act
	 * @return the liferay tincan manifest act that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public LiferayTincanManifestAct updateLiferayTincanManifestAct(
		LiferayTincanManifestAct liferayTincanManifestAct)
		throws SystemException {
		return liferayTincanManifestActPersistence.update(liferayTincanManifestAct);
	}

	/**
	 * Returns the liferay tincan manifest act local service.
	 *
	 * @return the liferay tincan manifest act local service
	 */
	public com.labimo.portlet.tincan.service.LiferayTincanManifestActLocalService getLiferayTincanManifestActLocalService() {
		return liferayTincanManifestActLocalService;
	}

	/**
	 * Sets the liferay tincan manifest act local service.
	 *
	 * @param liferayTincanManifestActLocalService the liferay tincan manifest act local service
	 */
	public void setLiferayTincanManifestActLocalService(
		com.labimo.portlet.tincan.service.LiferayTincanManifestActLocalService liferayTincanManifestActLocalService) {
		this.liferayTincanManifestActLocalService = liferayTincanManifestActLocalService;
	}

	/**
	 * Returns the liferay tincan manifest act persistence.
	 *
	 * @return the liferay tincan manifest act persistence
	 */
	public LiferayTincanManifestActPersistence getLiferayTincanManifestActPersistence() {
		return liferayTincanManifestActPersistence;
	}

	/**
	 * Sets the liferay tincan manifest act persistence.
	 *
	 * @param liferayTincanManifestActPersistence the liferay tincan manifest act persistence
	 */
	public void setLiferayTincanManifestActPersistence(
		LiferayTincanManifestActPersistence liferayTincanManifestActPersistence) {
		this.liferayTincanManifestActPersistence = liferayTincanManifestActPersistence;
	}

	/**
	 * Returns the liferay user local service.
	 *
	 * @return the liferay user local service
	 */
	public com.labimo.portlet.tincan.service.LiferayUserLocalService getLiferayUserLocalService() {
		return liferayUserLocalService;
	}

	/**
	 * Sets the liferay user local service.
	 *
	 * @param liferayUserLocalService the liferay user local service
	 */
	public void setLiferayUserLocalService(
		com.labimo.portlet.tincan.service.LiferayUserLocalService liferayUserLocalService) {
		this.liferayUserLocalService = liferayUserLocalService;
	}

	/**
	 * Returns the liferay user persistence.
	 *
	 * @return the liferay user persistence
	 */
	public LiferayUserPersistence getLiferayUserPersistence() {
		return liferayUserPersistence;
	}

	/**
	 * Sets the liferay user persistence.
	 *
	 * @param liferayUserPersistence the liferay user persistence
	 */
	public void setLiferayUserPersistence(
		LiferayUserPersistence liferayUserPersistence) {
		this.liferayUserPersistence = liferayUserPersistence;
	}

	/**
	 * Returns the oauth2 client local service.
	 *
	 * @return the oauth2 client local service
	 */
	public com.labimo.portlet.tincan.service.Oauth2ClientLocalService getOauth2ClientLocalService() {
		return oauth2ClientLocalService;
	}

	/**
	 * Sets the oauth2 client local service.
	 *
	 * @param oauth2ClientLocalService the oauth2 client local service
	 */
	public void setOauth2ClientLocalService(
		com.labimo.portlet.tincan.service.Oauth2ClientLocalService oauth2ClientLocalService) {
		this.oauth2ClientLocalService = oauth2ClientLocalService;
	}

	/**
	 * Returns the oauth2 client persistence.
	 *
	 * @return the oauth2 client persistence
	 */
	public Oauth2ClientPersistence getOauth2ClientPersistence() {
		return oauth2ClientPersistence;
	}

	/**
	 * Sets the oauth2 client persistence.
	 *
	 * @param oauth2ClientPersistence the oauth2 client persistence
	 */
	public void setOauth2ClientPersistence(
		Oauth2ClientPersistence oauth2ClientPersistence) {
		this.oauth2ClientPersistence = oauth2ClientPersistence;
	}

	/**
	 * Returns the oauth2 endpoint local service.
	 *
	 * @return the oauth2 endpoint local service
	 */
	public com.labimo.portlet.tincan.service.Oauth2EndpointLocalService getOauth2EndpointLocalService() {
		return oauth2EndpointLocalService;
	}

	/**
	 * Sets the oauth2 endpoint local service.
	 *
	 * @param oauth2EndpointLocalService the oauth2 endpoint local service
	 */
	public void setOauth2EndpointLocalService(
		com.labimo.portlet.tincan.service.Oauth2EndpointLocalService oauth2EndpointLocalService) {
		this.oauth2EndpointLocalService = oauth2EndpointLocalService;
	}

	/**
	 * Returns the oauth2 endpoint persistence.
	 *
	 * @return the oauth2 endpoint persistence
	 */
	public Oauth2EndpointPersistence getOauth2EndpointPersistence() {
		return oauth2EndpointPersistence;
	}

	/**
	 * Sets the oauth2 endpoint persistence.
	 *
	 * @param oauth2EndpointPersistence the oauth2 endpoint persistence
	 */
	public void setOauth2EndpointPersistence(
		Oauth2EndpointPersistence oauth2EndpointPersistence) {
		this.oauth2EndpointPersistence = oauth2EndpointPersistence;
	}

	/**
	 * Returns the oauth2 token local service.
	 *
	 * @return the oauth2 token local service
	 */
	public com.labimo.portlet.tincan.service.Oauth2TokenLocalService getOauth2TokenLocalService() {
		return oauth2TokenLocalService;
	}

	/**
	 * Sets the oauth2 token local service.
	 *
	 * @param oauth2TokenLocalService the oauth2 token local service
	 */
	public void setOauth2TokenLocalService(
		com.labimo.portlet.tincan.service.Oauth2TokenLocalService oauth2TokenLocalService) {
		this.oauth2TokenLocalService = oauth2TokenLocalService;
	}

	/**
	 * Returns the oauth2 token persistence.
	 *
	 * @return the oauth2 token persistence
	 */
	public Oauth2TokenPersistence getOauth2TokenPersistence() {
		return oauth2TokenPersistence;
	}

	/**
	 * Sets the oauth2 token persistence.
	 *
	 * @param oauth2TokenPersistence the oauth2 token persistence
	 */
	public void setOauth2TokenPersistence(
		Oauth2TokenPersistence oauth2TokenPersistence) {
		this.oauth2TokenPersistence = oauth2TokenPersistence;
	}

	/**
	 * Returns the tincan activity state local service.
	 *
	 * @return the tincan activity state local service
	 */
	public com.labimo.portlet.tincan.service.TincanActivityStateLocalService getTincanActivityStateLocalService() {
		return tincanActivityStateLocalService;
	}

	/**
	 * Sets the tincan activity state local service.
	 *
	 * @param tincanActivityStateLocalService the tincan activity state local service
	 */
	public void setTincanActivityStateLocalService(
		com.labimo.portlet.tincan.service.TincanActivityStateLocalService tincanActivityStateLocalService) {
		this.tincanActivityStateLocalService = tincanActivityStateLocalService;
	}

	/**
	 * Returns the tincan activity state persistence.
	 *
	 * @return the tincan activity state persistence
	 */
	public TincanActivityStatePersistence getTincanActivityStatePersistence() {
		return tincanActivityStatePersistence;
	}

	/**
	 * Sets the tincan activity state persistence.
	 *
	 * @param tincanActivityStatePersistence the tincan activity state persistence
	 */
	public void setTincanActivityStatePersistence(
		TincanActivityStatePersistence tincanActivityStatePersistence) {
		this.tincanActivityStatePersistence = tincanActivityStatePersistence;
	}

	/**
	 * Returns the tincan agent local service.
	 *
	 * @return the tincan agent local service
	 */
	public com.labimo.portlet.tincan.service.TincanAgentLocalService getTincanAgentLocalService() {
		return tincanAgentLocalService;
	}

	/**
	 * Sets the tincan agent local service.
	 *
	 * @param tincanAgentLocalService the tincan agent local service
	 */
	public void setTincanAgentLocalService(
		com.labimo.portlet.tincan.service.TincanAgentLocalService tincanAgentLocalService) {
		this.tincanAgentLocalService = tincanAgentLocalService;
	}

	/**
	 * Returns the tincan agent persistence.
	 *
	 * @return the tincan agent persistence
	 */
	public TincanAgentPersistence getTincanAgentPersistence() {
		return tincanAgentPersistence;
	}

	/**
	 * Sets the tincan agent persistence.
	 *
	 * @param tincanAgentPersistence the tincan agent persistence
	 */
	public void setTincanAgentPersistence(
		TincanAgentPersistence tincanAgentPersistence) {
		this.tincanAgentPersistence = tincanAgentPersistence;
	}

	/**
	 * Returns the tincan agent profile local service.
	 *
	 * @return the tincan agent profile local service
	 */
	public com.labimo.portlet.tincan.service.TincanAgentProfileLocalService getTincanAgentProfileLocalService() {
		return tincanAgentProfileLocalService;
	}

	/**
	 * Sets the tincan agent profile local service.
	 *
	 * @param tincanAgentProfileLocalService the tincan agent profile local service
	 */
	public void setTincanAgentProfileLocalService(
		com.labimo.portlet.tincan.service.TincanAgentProfileLocalService tincanAgentProfileLocalService) {
		this.tincanAgentProfileLocalService = tincanAgentProfileLocalService;
	}

	/**
	 * Returns the tincan agent profile persistence.
	 *
	 * @return the tincan agent profile persistence
	 */
	public TincanAgentProfilePersistence getTincanAgentProfilePersistence() {
		return tincanAgentProfilePersistence;
	}

	/**
	 * Sets the tincan agent profile persistence.
	 *
	 * @param tincanAgentProfilePersistence the tincan agent profile persistence
	 */
	public void setTincanAgentProfilePersistence(
		TincanAgentProfilePersistence tincanAgentProfilePersistence) {
		this.tincanAgentProfilePersistence = tincanAgentProfilePersistence;
	}

	/**
	 * Returns the tincan attachment local service.
	 *
	 * @return the tincan attachment local service
	 */
	public com.labimo.portlet.tincan.service.TincanAttachmentLocalService getTincanAttachmentLocalService() {
		return tincanAttachmentLocalService;
	}

	/**
	 * Sets the tincan attachment local service.
	 *
	 * @param tincanAttachmentLocalService the tincan attachment local service
	 */
	public void setTincanAttachmentLocalService(
		com.labimo.portlet.tincan.service.TincanAttachmentLocalService tincanAttachmentLocalService) {
		this.tincanAttachmentLocalService = tincanAttachmentLocalService;
	}

	/**
	 * Returns the tincan attachment persistence.
	 *
	 * @return the tincan attachment persistence
	 */
	public TincanAttachmentPersistence getTincanAttachmentPersistence() {
		return tincanAttachmentPersistence;
	}

	/**
	 * Sets the tincan attachment persistence.
	 *
	 * @param tincanAttachmentPersistence the tincan attachment persistence
	 */
	public void setTincanAttachmentPersistence(
		TincanAttachmentPersistence tincanAttachmentPersistence) {
		this.tincanAttachmentPersistence = tincanAttachmentPersistence;
	}

	/**
	 * Returns the tincan statement local service.
	 *
	 * @return the tincan statement local service
	 */
	public com.labimo.portlet.tincan.service.TincanStatementLocalService getTincanStatementLocalService() {
		return tincanStatementLocalService;
	}

	/**
	 * Sets the tincan statement local service.
	 *
	 * @param tincanStatementLocalService the tincan statement local service
	 */
	public void setTincanStatementLocalService(
		com.labimo.portlet.tincan.service.TincanStatementLocalService tincanStatementLocalService) {
		this.tincanStatementLocalService = tincanStatementLocalService;
	}

	/**
	 * Returns the tincan statement persistence.
	 *
	 * @return the tincan statement persistence
	 */
	public TincanStatementPersistence getTincanStatementPersistence() {
		return tincanStatementPersistence;
	}

	/**
	 * Sets the tincan statement persistence.
	 *
	 * @param tincanStatementPersistence the tincan statement persistence
	 */
	public void setTincanStatementPersistence(
		TincanStatementPersistence tincanStatementPersistence) {
		this.tincanStatementPersistence = tincanStatementPersistence;
	}

	/**
	 * Returns the tincan statement attachment local service.
	 *
	 * @return the tincan statement attachment local service
	 */
	public com.labimo.portlet.tincan.service.TincanStatementAttachmentLocalService getTincanStatementAttachmentLocalService() {
		return tincanStatementAttachmentLocalService;
	}

	/**
	 * Sets the tincan statement attachment local service.
	 *
	 * @param tincanStatementAttachmentLocalService the tincan statement attachment local service
	 */
	public void setTincanStatementAttachmentLocalService(
		com.labimo.portlet.tincan.service.TincanStatementAttachmentLocalService tincanStatementAttachmentLocalService) {
		this.tincanStatementAttachmentLocalService = tincanStatementAttachmentLocalService;
	}

	/**
	 * Returns the tincan statement attachment persistence.
	 *
	 * @return the tincan statement attachment persistence
	 */
	public TincanStatementAttachmentPersistence getTincanStatementAttachmentPersistence() {
		return tincanStatementAttachmentPersistence;
	}

	/**
	 * Sets the tincan statement attachment persistence.
	 *
	 * @param tincanStatementAttachmentPersistence the tincan statement attachment persistence
	 */
	public void setTincanStatementAttachmentPersistence(
		TincanStatementAttachmentPersistence tincanStatementAttachmentPersistence) {
		this.tincanStatementAttachmentPersistence = tincanStatementAttachmentPersistence;
	}

	/**
	 * Returns the tincan statement context local service.
	 *
	 * @return the tincan statement context local service
	 */
	public com.labimo.portlet.tincan.service.TincanStatementContextLocalService getTincanStatementContextLocalService() {
		return tincanStatementContextLocalService;
	}

	/**
	 * Sets the tincan statement context local service.
	 *
	 * @param tincanStatementContextLocalService the tincan statement context local service
	 */
	public void setTincanStatementContextLocalService(
		com.labimo.portlet.tincan.service.TincanStatementContextLocalService tincanStatementContextLocalService) {
		this.tincanStatementContextLocalService = tincanStatementContextLocalService;
	}

	/**
	 * Returns the tincan statement context persistence.
	 *
	 * @return the tincan statement context persistence
	 */
	public TincanStatementContextPersistence getTincanStatementContextPersistence() {
		return tincanStatementContextPersistence;
	}

	/**
	 * Sets the tincan statement context persistence.
	 *
	 * @param tincanStatementContextPersistence the tincan statement context persistence
	 */
	public void setTincanStatementContextPersistence(
		TincanStatementContextPersistence tincanStatementContextPersistence) {
		this.tincanStatementContextPersistence = tincanStatementContextPersistence;
	}

	/**
	 * Returns the tincan statement result local service.
	 *
	 * @return the tincan statement result local service
	 */
	public com.labimo.portlet.tincan.service.TincanStatementResultLocalService getTincanStatementResultLocalService() {
		return tincanStatementResultLocalService;
	}

	/**
	 * Sets the tincan statement result local service.
	 *
	 * @param tincanStatementResultLocalService the tincan statement result local service
	 */
	public void setTincanStatementResultLocalService(
		com.labimo.portlet.tincan.service.TincanStatementResultLocalService tincanStatementResultLocalService) {
		this.tincanStatementResultLocalService = tincanStatementResultLocalService;
	}

	/**
	 * Returns the tincan statement result persistence.
	 *
	 * @return the tincan statement result persistence
	 */
	public TincanStatementResultPersistence getTincanStatementResultPersistence() {
		return tincanStatementResultPersistence;
	}

	/**
	 * Sets the tincan statement result persistence.
	 *
	 * @param tincanStatementResultPersistence the tincan statement result persistence
	 */
	public void setTincanStatementResultPersistence(
		TincanStatementResultPersistence tincanStatementResultPersistence) {
		this.tincanStatementResultPersistence = tincanStatementResultPersistence;
	}

	/**
	 * Returns the tincan sub statement local service.
	 *
	 * @return the tincan sub statement local service
	 */
	public com.labimo.portlet.tincan.service.TincanSubStatementLocalService getTincanSubStatementLocalService() {
		return tincanSubStatementLocalService;
	}

	/**
	 * Sets the tincan sub statement local service.
	 *
	 * @param tincanSubStatementLocalService the tincan sub statement local service
	 */
	public void setTincanSubStatementLocalService(
		com.labimo.portlet.tincan.service.TincanSubStatementLocalService tincanSubStatementLocalService) {
		this.tincanSubStatementLocalService = tincanSubStatementLocalService;
	}

	/**
	 * Returns the tincan sub statement persistence.
	 *
	 * @return the tincan sub statement persistence
	 */
	public TincanSubStatementPersistence getTincanSubStatementPersistence() {
		return tincanSubStatementPersistence;
	}

	/**
	 * Sets the tincan sub statement persistence.
	 *
	 * @param tincanSubStatementPersistence the tincan sub statement persistence
	 */
	public void setTincanSubStatementPersistence(
		TincanSubStatementPersistence tincanSubStatementPersistence) {
		this.tincanSubStatementPersistence = tincanSubStatementPersistence;
	}

	/**
	 * Returns the tincan verb local service.
	 *
	 * @return the tincan verb local service
	 */
	public com.labimo.portlet.tincan.service.TincanVerbLocalService getTincanVerbLocalService() {
		return tincanVerbLocalService;
	}

	/**
	 * Sets the tincan verb local service.
	 *
	 * @param tincanVerbLocalService the tincan verb local service
	 */
	public void setTincanVerbLocalService(
		com.labimo.portlet.tincan.service.TincanVerbLocalService tincanVerbLocalService) {
		this.tincanVerbLocalService = tincanVerbLocalService;
	}

	/**
	 * Returns the tincan verb persistence.
	 *
	 * @return the tincan verb persistence
	 */
	public TincanVerbPersistence getTincanVerbPersistence() {
		return tincanVerbPersistence;
	}

	/**
	 * Sets the tincan verb persistence.
	 *
	 * @param tincanVerbPersistence the tincan verb persistence
	 */
	public void setTincanVerbPersistence(
		TincanVerbPersistence tincanVerbPersistence) {
		this.tincanVerbPersistence = tincanVerbPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.labimo.portlet.tincan.model.LiferayTincanManifestAct",
			liferayTincanManifestActLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.labimo.portlet.tincan.model.LiferayTincanManifestAct");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return LiferayTincanManifestAct.class;
	}

	protected String getModelClassName() {
		return LiferayTincanManifestAct.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = liferayTincanManifestActPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.labimo.portlet.tincan.service.LiferayTincanManifestActLocalService.class)
	protected com.labimo.portlet.tincan.service.LiferayTincanManifestActLocalService liferayTincanManifestActLocalService;
	@BeanReference(type = LiferayTincanManifestActPersistence.class)
	protected LiferayTincanManifestActPersistence liferayTincanManifestActPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.LiferayUserLocalService.class)
	protected com.labimo.portlet.tincan.service.LiferayUserLocalService liferayUserLocalService;
	@BeanReference(type = LiferayUserPersistence.class)
	protected LiferayUserPersistence liferayUserPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.Oauth2ClientLocalService.class)
	protected com.labimo.portlet.tincan.service.Oauth2ClientLocalService oauth2ClientLocalService;
	@BeanReference(type = Oauth2ClientPersistence.class)
	protected Oauth2ClientPersistence oauth2ClientPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.Oauth2EndpointLocalService.class)
	protected com.labimo.portlet.tincan.service.Oauth2EndpointLocalService oauth2EndpointLocalService;
	@BeanReference(type = Oauth2EndpointPersistence.class)
	protected Oauth2EndpointPersistence oauth2EndpointPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.Oauth2TokenLocalService.class)
	protected com.labimo.portlet.tincan.service.Oauth2TokenLocalService oauth2TokenLocalService;
	@BeanReference(type = Oauth2TokenPersistence.class)
	protected Oauth2TokenPersistence oauth2TokenPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanActivityStateLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanActivityStateLocalService tincanActivityStateLocalService;
	@BeanReference(type = TincanActivityStatePersistence.class)
	protected TincanActivityStatePersistence tincanActivityStatePersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanAgentLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanAgentLocalService tincanAgentLocalService;
	@BeanReference(type = TincanAgentPersistence.class)
	protected TincanAgentPersistence tincanAgentPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanAgentProfileLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanAgentProfileLocalService tincanAgentProfileLocalService;
	@BeanReference(type = TincanAgentProfilePersistence.class)
	protected TincanAgentProfilePersistence tincanAgentProfilePersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanAttachmentLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanAttachmentLocalService tincanAttachmentLocalService;
	@BeanReference(type = TincanAttachmentPersistence.class)
	protected TincanAttachmentPersistence tincanAttachmentPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanStatementLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanStatementLocalService tincanStatementLocalService;
	@BeanReference(type = TincanStatementPersistence.class)
	protected TincanStatementPersistence tincanStatementPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanStatementAttachmentLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanStatementAttachmentLocalService tincanStatementAttachmentLocalService;
	@BeanReference(type = TincanStatementAttachmentPersistence.class)
	protected TincanStatementAttachmentPersistence tincanStatementAttachmentPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanStatementContextLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanStatementContextLocalService tincanStatementContextLocalService;
	@BeanReference(type = TincanStatementContextPersistence.class)
	protected TincanStatementContextPersistence tincanStatementContextPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanStatementResultLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanStatementResultLocalService tincanStatementResultLocalService;
	@BeanReference(type = TincanStatementResultPersistence.class)
	protected TincanStatementResultPersistence tincanStatementResultPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanSubStatementLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanSubStatementLocalService tincanSubStatementLocalService;
	@BeanReference(type = TincanSubStatementPersistence.class)
	protected TincanSubStatementPersistence tincanSubStatementPersistence;
	@BeanReference(type = com.labimo.portlet.tincan.service.TincanVerbLocalService.class)
	protected com.labimo.portlet.tincan.service.TincanVerbLocalService tincanVerbLocalService;
	@BeanReference(type = TincanVerbPersistence.class)
	protected TincanVerbPersistence tincanVerbPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private LiferayTincanManifestActLocalServiceClpInvoker _clpInvoker = new LiferayTincanManifestActLocalServiceClpInvoker();
}